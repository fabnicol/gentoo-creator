.TH "createInstaller" 3 "Sun Feb 14 2021" "Version 1.0" "gentoo-creator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
createInstaller
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBget_gentoo_install_iso\fP ()"
.br
.RI "Download minimal Gentoo install ISO file and caches\&.q\&. "
.ti -1c
.RI "\fBget_clonezilla_iso\fP ()"
.br
.RI "Download clonezilla ISO file and caches it\&. "
.ti -1c
.RI "\fBget_cache_clonezilla_iso\fP ()"
.br
.RI "Either download clonezilla ISO file and caches it OR uncaches it\&. "
.ti -1c
.RI "\fBfetch_clonezilla_iso\fP ()"
.br
.RI "Download clonezilla ISO file and process it\&. "
.ti -1c
.RI "\fBhelp_md\fP ()"
.br
.RI "Print usage in markdown format\&. "
.ti -1c
.RI "\fBhelp_\fP ()"
.br
.RI "Print usage to stdout\&. "
.ti -1c
.RI "\fBtest_cli_pre\fP ()"
.br
.RI "Check VirtualBox version and prepare commandline analysis\&. "
.ti -1c
.RI "\fBtest_cli\fP (cli)"
.br
.RI "Analyse commandline\&. "
.ti -1c
.RI "\fBtest_cli_post\fP ()"
.br
.RI "Check commanline coherence and incompatibilities\&. "
.ti -1c
.RI "\fBfetch_livecd\fP ()"
.br
.RI "Downloads Gentoo install CD\&. "
.ti -1c
.RI "\fBfetch_stage3\fP ()"
.br
.RI "Downloads a fresh stage3 Gentoo archive\&. "
.ti -1c
.RI "\fBmount_live_cd\fP ()"
.br
.RI "Mount Gentoo/Clonezilla live CD and unsquashfs the GNU/linux system\&. "
.ti -1c
.RI "\fBmake_boot_from_livecd\fP ()"
.br
.RI "Tweak the Gentoo minimal install CD so that the custom- made shell scripts and stage3 archive are included into the squashfs filesystem\&. "
.ti -1c
.RI "\fBtest_vm_running\fP (vm)"
.br
.RI "Check if VM as first named argument exists and is running\&. "
.ti -1c
.RI "\fBdeep_clean\fP ()"
.br
.RI "Force-clean root VirtualBox registry\&. "
.ti -1c
.RI "\fBdelete_vm\fP (vm, ext)"
.br
.RI "Powers off, possibly with emergency stop, the VM names as first argument\&. "
.ti -1c
.RI "\fBcreate_vm\fP ()"
.br
.RI "Create main VirtualBox machine using VBoxManage commandline\&. "
.ti -1c
.RI "\fBclonezilla_to_iso\fP (iso, dir)"
.br
.RI "Create Gentoo linux clonezilla ISO installer out of a clonezilla directory structure and an clonezilla image\&. "
.ti -1c
.RI "\fBprocess_clonezilla_iso\fP ()"
.br
.RI "Download clonezilla ISO or recover it from cache calling \fBfetch_clonezilla_iso\fP\&. 
.br
Upgrade it with virtualbox guest additions\&. "
.ti -1c
.RI "\fBbuild_virtualbox\fP ()"
.br
.RI "Build VirtualBox from source using an unsquashed clonezilla CD as a chrooted environment\&. "
.ti -1c
.RI "\fBcreate_iso_vm\fP ()"
.br
.RI "Create the new VirtualBox machine aimed at converting the VDI virtualdisk containing the Gentoo Linux distribution into an XZ-compressed clonezilla image uneder \fBISOFILES/home/partimag/image\fP\&. "
.ti -1c
.RI "\fBclone_vm_to_device\fP ()"
.br
.RI "Directly clone Gentoo VM to USB stick (or any using block device) "
.ti -1c
.RI "\fBclone_vm_to_raw\fP ()"
.br
.RI "Use\&. "
.ti -1c
.RI "\fBdd_to_usb\fP ()"
.br
.RI "Bare-metal copy of temporary RAW disk to external device\&. "
.ti -1c
.RI "\fBclonezilla_device_to_image\fP ()"
.br
.RI "Create CloneZilla xz-compressed image out of an external block device (like a USB stick) "
.ti -1c
.RI "\fBvbox_img_works\fP ()"
.br
.RI "Test if \fBvbox-img\fP is functional\&. "
.ti -1c
.RI "\fBcreate_device_system\fP ()"
.br
.RI "Clone VDI virtual disk to external device (USB device or hard drive) "
.ti -1c
.RI "\fBcleanup\fP ()"
.br
.RI "Clean up all temporary files and directpries (except for VirtualBox build) "
.ti -1c
.RI "\fBgenerate_Gentoo\fP ()"
.br
.RI "Launch routines: fetch install IO, starge3 archive, create VM\&. "
.ti -1c
.RI "\fBmain\fP ()"
.br
.RI "Main function launching routines\&. "
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "ReadOnly String Array \fBARR\fP"
.br
.RI "global string array of switches and default values "
.ti -1c
.RI "ReadOnly Integer \fBARRAY_LENGTH\fP = $((${#\fBARR\fP[*]}/4))"
.br
.RI "Number of switches (true length of array divided by 4) "
.ti -1c
.RI "Exported String \fBISO\fP = 'downloaded\&.iso'"
.br
.RI "Name of downloaded clonezilla ISO file\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SH "Function Documentation"
.PP 
.SS "build_virtualbox ()"

.PP
Build VirtualBox from source using an unsquashed clonezilla CD as a chrooted environment\&. Build scripts are copied from \fBclonezilla/build\fP 
.PP
\fBNote\fP
.RS 4
This stage is only necessay if \fBvbox-img\fP is to be used to directly convert the VDI virtual disk into a block device, on account of a bug in Oracle source code (ticket #19901)\&. 
.br
This is only needed to reduce disk space requirements and avoid a temporary RAW file on disk of about 50 GB\&. Otherwise it is simpler to use the distribution stock version\&. 
.RE
.PP

.PP
Definition at line 1408 of file mkgentoo\&.sh\&.
.SS "cleanup ()"

.PP
Clean up all temporary files and directpries (except for VirtualBox build) 
.PP
Definition at line 1866 of file mkgentoo\&.sh\&.
.SS "clone_vm_to_device ()"

.PP
Directly clone Gentoo VM to USB stick (or any using block device) 
.PP
\fBWarning\fP
.RS 4
Requests the \fIpatched\fP version of \fBvbox-img\fP on account of Oracle source code bug (ticket #19901) 
.RE
.PP
\fBNote\fP
.RS 4
Either build it beforehand or specify on commandline: 
.PP
.nf
build_virtualbox=true 

.fi
.PP
 
.RE
.PP

.PP
Definition at line 1642 of file mkgentoo\&.sh\&.
.SS "clone_vm_to_raw ()"

.PP
Use\&. 
.PP
.nf
VBoxManage clonemedium 

.fi
.PP
 to clone VDI to RAW file before bare-metal copy to device\&. 
.PP
Definition at line 1670 of file mkgentoo\&.sh\&.
.SS "clonezilla_device_to_image ()"

.PP
Create CloneZilla xz-compressed image out of an external block device (like a USB stick) Image is created under ISOFILES/home/partimag/image under VMPATH 
.PP
\fBReturn values\fP
.RS 4
\fI0\fP on success otherwise exits -1 on failure 
.RE
.PP

.PP
Definition at line 1707 of file mkgentoo\&.sh\&.
.SS "clonezilla_to_iso (iso, dir)"

.PP
Create Gentoo linux clonezilla ISO installer out of a clonezilla directory structure and an clonezilla image\&. 
.PP
\fBParameters\fP
.RS 4
\fIiso\fP ISO output 
.br
\fIdir\fP Directory to be transformed into ISO output 
.RE
.PP
\fBNote\fP
.RS 4
ISO can be burned to DVD or used to create a bootable USB stick using dd on *nix platforms or Rufus (on Windows)\&. 
.RE
.PP

.PP
Definition at line 1245 of file mkgentoo\&.sh\&.
.SS "create_device_system ()"

.PP
Clone VDI virtual disk to external device (USB device or hard drive) Two options are available\&. If vbox-img (patched) is functional after building VirtualBox from source, then use it and clone VDI directly to external device\&. Otherwise create a temporary RAW file and bare-metal copy this file to external device\&. 
.PP
\fBReturn values\fP
.RS 4
\fIIn\fP the first case, the exit code of \fBclone_vm_to_device\fP 
.br
\fIIn\fP the second case, the exit code of \fBdd_to_usb\fP following \fBclone_vm_to_raw\fP 
.RE
.PP
\fBNote\fP
.RS 4
Requires \fBhot_install\fP on command line to be activated\&. This function performs what a live CD does to a target disk, yet using the currently running operating system\&. 
.RE
.PP

.PP
Definition at line 1825 of file mkgentoo\&.sh\&.
.SS "create_iso_vm ()"

.PP
Create the new VirtualBox machine aimed at converting the VDI virtualdisk containing the Gentoo Linux distribution into an XZ-compressed clonezilla image uneder \fBISOFILES/home/partimag/image\fP\&. Register machine, create VDI drive, create IDE drive attach disks to controlers 
.br
Attach newly augmented clonezilla LiveCD to IDE controller\&. 
.br
Wait for the VM to complete its task\&. Check that it is still running every minute\&. 
.br
\fBNote\fP
.RS 4
VM may be visible (vm type=gui) or silent (vm type=headless, currently to be fixed)\&. Wait for the VM to complete task\&. 
.br
A new VM is necessary as the first VM used to build the Gentoo filesystem does not contain clonezilla or the VirtualBox guest additions (requested for sharing folders with host)\&. Calls \fBprocess_clonezilla_iso\fP to satisfy these requirements\&. 
.RE
.PP
\fBWarning\fP
.RS 4
the \fBsharedfolder\fP command may fail vith older version of VirtualBox or not be implemented\&. It is transient, so it disappears on shutdown and requests prior startup of VM to be activated\&. 
.RE
.PP

.PP
Definition at line 1521 of file mkgentoo\&.sh\&.
.SS "create_vm ()"

.PP
Create main VirtualBox machine using VBoxManage commandline\&. 
.PD 0

.IP "\(bu" 2
Register machine, create VDI drive, create IDE drive attach disks to controlers 
.IP "\(bu" 2
Attach augmented clonezilla LiveCD to IDE controller\&. 
.IP "\(bu" 2
Wait for the VM to complete its task\&. Check that it is still running every minute\&. 
.IP "\(bu" 2
Finally compact it\&. 
.PP
\fBNote\fP
.RS 4
VM may be visible (vm type=gui) or without GUI (vm type=headless, currently to be fixed) 
.RE
.PP
\fBTodo\fP
.RS 4
Find a way to only compact on success and never on failure of VM\&. 
.RE
.PP

.PP

.PP
Definition at line 1090 of file mkgentoo\&.sh\&.
.SS "dd_to_usb ()"

.PP
Bare-metal copy of temporary RAW disk to external device\&. 
.PP
\fBNote\fP
.RS 4
Used only if vbox-img (patched version) has not been built\&. 
.RE
.PP

.PP
Definition at line 1680 of file mkgentoo\&.sh\&.
.SS "deep_clean ()"

.PP
Force-clean root VirtualBox registry\&. 
.PP
Definition at line 936 of file mkgentoo\&.sh\&.
.SS "delete_vm (vm, ext)"

.PP
Powers off, possibly with emergency stop, the VM names as first argument\&. 
.PP
\fBParameters\fP
.RS 4
\fIvm\fP VM name 
.br
\fIext\fP virtual disk extension, without dot (defaults to 'vdi')\&.
.RE
.PP
.PD 0
.IP "\(bu" 2
Unregisters it 
.IP "\(bu" 2
Deletes its folder structure and hard drive (default is 'vdi' as a second argument) 
.PP
\fBReturn values\fP
.RS 4
\fIReturns\fP 0 if Directory and hard drive could be erased, otherwise the OR value of both erasing commands 
.RE
.PP

.PP

.PP
Definition at line 990 of file mkgentoo\&.sh\&.
.SS "fetch_clonezilla_iso ()"

.PP
Download clonezilla ISO file and process it\&. 
.PD 0

.IP "\(bu" 2
Download iff \fBDOWNLOAD_CLONEZILLA\fP has value 'true' 
.IP "\(bu" 2
Optionnally checks MD5 sum\&. 
.IP "\(bu" 2
Caches ISO download for later uses\&. 
.IP "\(bu" 2
Uncaches it if no fresh download\&. 
.IP "\(bu" 2
Mount ISO download\&. Copy ro mounted filesystem to rw directory\&. 
.IP "\(bu" 2
Unsquash ISO filesystem\&.squashfs\&. 
.IP "\(bu" 2
Copy clonezilla config file\&. 
.IP "\(bu" 2
Copy resolv\&.conf to unsquashed filesystem\&. 
.PP
\fBReturn values\fP
.RS 4
\fI0\fP on success or exits -1 on failure\&. 
.RE
.PP

.PP

.PP
Definition at line 148 of file fetch_clonezilla_iso\&.sh\&.
.SS "fetch_livecd ()"

.PP
Downloads Gentoo install CD\&. Caches it as ${ISO} 
.PP
\fBReturn values\fP
.RS 4
\fIReturns\fP 0 on success or -1 on exit 
.RE
.PP

.PP
Definition at line 614 of file mkgentoo\&.sh\&.
.SS "fetch_stage3 ()"

.PP
Downloads a fresh stage3 Gentoo archive\&. Caches it as ${STAGE3} 
.PP
Definition at line 659 of file mkgentoo\&.sh\&.
.SS "generate_Gentoo ()"

.PP
Launch routines: fetch install IO, starge3 archive, create VM\&. 
.PP
Definition at line 1888 of file mkgentoo\&.sh\&.
.SS "get_cache_clonezilla_iso ()"

.PP
Either download clonezilla ISO file and caches it OR uncaches it\&. 
.PP
Definition at line 107 of file fetch_clonezilla_iso\&.sh\&.
.SS "get_clonezilla_iso ()"

.PP
Download clonezilla ISO file and caches it\&. 
.PP
Definition at line 80 of file fetch_clonezilla_iso\&.sh\&.
.SS "get_gentoo_install_iso ()"

.PP
Download minimal Gentoo install ISO file and caches\&.q\&. Optionaly checks MD5SUMS\&. 
.PP
Definition at line 8 of file fetch_clonezilla_iso\&.sh\&.
.SS "help_ ()"

.PP
Print usage to stdout\&. 
.PP
Definition at line 170 of file mkgentoo\&.sh\&.
.SS "help_md ()"

.PP
Print usage in markdown format\&. 
.PP
Definition at line 130 of file mkgentoo\&.sh\&.
.SS "main ()"

.PP
Main function launching routines\&. 
.PP
\fBTodo\fP
.RS 4
Daemonize the part below generate_Gentoo when #VMTYPE is \fCheadless\fP so that the script can be detached completely with \fCnohup gentoolize \&.\&.\&. &\fP 
.RE
.PP

.PP
Definition at line 1908 of file mkgentoo\&.sh\&.
.SS "make_boot_from_livecd ()"

.PP
Tweak the Gentoo minimal install CD so that the custom- made shell scripts and stage3 archive are included into the squashfs filesystem\&. This function is returned from early if
.PP
.nf
create_squashfs=false

.fi
.PP
 is given on commandline\&. 
.PP
\fBNote\fP
.RS 4
Will be run in the ${VM} virtual machine 
.RE
.PP
\fBReturn values\fP
.RS 4
\fIReturns\fP 0 on success or -1 on failure\&. 
.RE
.PP

.PP
Definition at line 804 of file mkgentoo\&.sh\&.
.SS "mount_live_cd ()"

.PP
Mount Gentoo/Clonezilla live CD and unsquashfs the GNU/linux system\&. 
.PP
\fBNote\fP
.RS 4
live CD is mounted under $VMPATH/mnt and rsync'd to $VMPATH/mnt2 
.RE
.PP

.PP
Definition at line 721 of file mkgentoo\&.sh\&.
.SS "process_clonezilla_iso ()"

.PP
Download clonezilla ISO or recover it from cache calling \fBfetch_clonezilla_iso\fP\&. 
.br
Upgrade it with virtualbox guest additions\&. Chroot into the clonezilla Ubuntu GNU/Linux distribution and runs apt to build kernel modules and install the VirtualBox guest additions ISO image\&. 
.br
Upgrade clonezilla kernel consequently Recreates the quashfs system after exiting chroot\&. Copy the new \fBisolinux\&.cfg\fP parameter file: automates and silences clonezilla behaviour on disk recovery\&. Calls \fBclonezilla_to_iso\fP 
.PP
\fBNote\fP
.RS 4
Installing the guest additions is a prerequisite to folder sharing between the ISO VM and the host\&. Folder sharing is necessary to recover a compressed clonezilla image of the VDI virtual disk into the directory ISOFILES/home/partimag/image 
.RE
.PP

.PP
Definition at line 1293 of file mkgentoo\&.sh\&.
.SS "test_cli (cli)"

.PP
Analyse commandline\&. 
.PP
\fBParameters\fP
.RS 4
\fIcli\fP Commandline
.RE
.PP
.PD 0
.IP "\(bu" 2
Create globals of the form VAR=arg when there is var=arg on commandline 
.IP "\(bu" 2
Otherwise assign default values VAR=defaults (3rd argument in array \fBARR\fP) 
.IP "\(bu" 2
Also checks type of argument against types described for \fBARR\fP 
.PP

.PP
Definition at line 391 of file mkgentoo\&.sh\&.
.SS "test_cli_post ()"

.PP
Check commanline coherence and incompatibilities\&. 
.PP
\fBReturn values\fP
.RS 4
\fI0\fP or exit 1 on incompatibilities 
.RE
.PP

.PP
Definition at line 529 of file mkgentoo\&.sh\&.
.SS "test_cli_pre ()"

.PP
Check VirtualBox version and prepare commandline analysis\&. 
.PP
\fBReturn values\fP
.RS 4
\fI0\fP otherwise exit 1 if VirtualBox is too old 
.RE
.PP

.PP
Definition at line 275 of file mkgentoo\&.sh\&.
.SS "test_vm_running (vm)"

.PP
Check if VM as first named argument exists and is running\&. 
.PP
\fBParameters\fP
.RS 4
\fIvm\fP VM name or UUID 
.RE
.PP
\fBReturn values\fP
.RS 4
\fIReturns\fP 0 on success and 1 is VM is not listed or not running 
.RE
.PP

.PP
Definition at line 926 of file mkgentoo\&.sh\&.
.SS "vbox_img_works ()"

.PP
Test if \fBvbox-img\fP is functional\&. \fBvbox-img\fP is a script; it refers to \fBvbox-img\&.bin\fP, which is a soft link to the VirtuaBox patched build\&. 
.PP
\fBReturn values\fP
.RS 4
\fI0\fP if vbox-img --version is non-empty 
.br
\fI1\fP otherwise 
.RE
.PP

.PP
Definition at line 1790 of file mkgentoo\&.sh\&.
.SH "Variable Documentation"
.PP 
.SS "ARR"

.PP
global string array of switches and default values Structure is as follows:
.PP
.nf
{{"Commandline option", "Description", "Default value", "Type"}, {\&.\&.\&.},\&.\&.\&.}

.fi
.PP
 'Type' is among the following values: 
.PD 0

.IP "\(bu" 2
\fBb\fP Boolean, 'false' or 'true' 
.IP "\(bu" 2
\fBd\fP An existing directory 
.IP "\(bu" 2
\fBe\fP Email address: regexp '[a-z]+@[a-z]+\\\&.[a-z]+' 
.IP "\(bu" 2
\fBf\fP An existing file 
.IP "\(bu" 2
\fBn\fP Numeric value 
.IP "\(bu" 2
\fBo\fP 'on' or 'off', a VBoxManage custom Boolean 
.IP "\(bu" 2
\fBs\fP Non-empty string\&. Corresponding defaults may be empty however\&. This is the notably case for passwords\&. For such options, explicit commandline value after '=' is requested\&. 
.IP "\(bu" 2
\fBu\fP Url 
.IP "\(bu" 2
\fBx:y\fP Conditional type x: one of the above, with [ -z '$x' ] <=> { [ '$y' = 'false' ] || [ -z '$y' ]; } && [ '$y' != 'true' ] 
.IP "\(bu" 2
\fBvm\fP Restricted to the \fCvm\fP option: can be set to @ code \fCfalse\fP to bypass OS building and only perform burning/external device operations\&. A double-entry array will be simulated using indexes\&.
.PP
\fBNote\fP
.RS 4
\fCdebug_mode\fP should be place up front in the array 
.RE
.PP

.PP
Definition at line 117 of file mkgentoo\&.sh\&.
.SS "ARRAY_LENGTH = $((${#\fBARR\fP[*]}/4))"

.PP
Number of switches (true length of array divided by 4) 
.PP
Definition at line 124 of file mkgentoo\&.sh\&.
.SS "ISO = 'downloaded\&.iso'"

.PP
Name of downloaded clonezilla ISO file\&. 
.PP
Definition at line 268 of file mkgentoo\&.sh\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for gentoo-creator from the source code\&.
